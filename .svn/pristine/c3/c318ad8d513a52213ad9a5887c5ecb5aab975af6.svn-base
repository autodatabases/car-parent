package com.emate.shop.business.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CarWashPayExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    protected Integer limitStart;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    protected Integer limitEnd;

    public static final String ID_ASC = "id asc";

    public static final String ID_DESC = "id desc";

    public static final String ORDER_NO_ASC = "order_no asc";

    public static final String ORDER_NO_DESC = "order_no desc";

    public static final String USER_ID_ASC = "user_id asc";

    public static final String USER_ID_DESC = "user_id desc";

    public static final String TOTAL_PAY_ASC = "total_pay asc";

    public static final String TOTAL_PAY_DESC = "total_pay desc";

    public static final String ACCOUNT_PAY_ASC = "account_pay asc";

    public static final String ACCOUNT_PAY_DESC = "account_pay desc";

    public static final String ACTUAL_PAY_ASC = "actual_pay asc";

    public static final String ACTUAL_PAY_DESC = "actual_pay desc";

    public static final String WASH_NUMBER_ASC = "wash_number asc";

    public static final String WASH_NUMBER_DESC = "wash_number desc";

    public static final String STATUS_ASC = "status asc";

    public static final String STATUS_DESC = "status desc";

    public static final String CREATE_TIME_ASC = "create_time asc";

    public static final String CREATE_TIME_DESC = "create_time desc";

    public static final String UPDATE_TIME_ASC = "update_time asc";

    public static final String UPDATE_TIME_DESC = "update_time desc";

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public CarWashPayExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public void setLimitStart(Integer limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public Integer getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public void setLimitEnd(Integer limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public Integer getLimitEnd() {
        return limitEnd;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOrderNoIsNull() {
            addCriterion("order_no is null");
            return (Criteria) this;
        }

        public Criteria andOrderNoIsNotNull() {
            addCriterion("order_no is not null");
            return (Criteria) this;
        }

        public Criteria andOrderNoEqualTo(String value) {
            addCriterion("order_no =", value, "orderNo");
            return (Criteria) this;
        }

        public Criteria andOrderNoNotEqualTo(String value) {
            addCriterion("order_no <>", value, "orderNo");
            return (Criteria) this;
        }

        public Criteria andOrderNoGreaterThan(String value) {
            addCriterion("order_no >", value, "orderNo");
            return (Criteria) this;
        }

        public Criteria andOrderNoGreaterThanOrEqualTo(String value) {
            addCriterion("order_no >=", value, "orderNo");
            return (Criteria) this;
        }

        public Criteria andOrderNoLessThan(String value) {
            addCriterion("order_no <", value, "orderNo");
            return (Criteria) this;
        }

        public Criteria andOrderNoLessThanOrEqualTo(String value) {
            addCriterion("order_no <=", value, "orderNo");
            return (Criteria) this;
        }

        public Criteria andOrderNoLike(String value) {
            addCriterion("order_no like", value, "orderNo");
            return (Criteria) this;
        }

        public Criteria andOrderNoNotLike(String value) {
            addCriterion("order_no not like", value, "orderNo");
            return (Criteria) this;
        }

        public Criteria andOrderNoIn(List<String> values) {
            addCriterion("order_no in", values, "orderNo");
            return (Criteria) this;
        }

        public Criteria andOrderNoNotIn(List<String> values) {
            addCriterion("order_no not in", values, "orderNo");
            return (Criteria) this;
        }

        public Criteria andOrderNoBetween(String value1, String value2) {
            addCriterion("order_no between", value1, value2, "orderNo");
            return (Criteria) this;
        }

        public Criteria andOrderNoNotBetween(String value1, String value2) {
            addCriterion("order_no not between", value1, value2, "orderNo");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andTotalPayIsNull() {
            addCriterion("total_pay is null");
            return (Criteria) this;
        }

        public Criteria andTotalPayIsNotNull() {
            addCriterion("total_pay is not null");
            return (Criteria) this;
        }

        public Criteria andTotalPayEqualTo(BigDecimal value) {
            addCriterion("total_pay =", value, "totalPay");
            return (Criteria) this;
        }

        public Criteria andTotalPayNotEqualTo(BigDecimal value) {
            addCriterion("total_pay <>", value, "totalPay");
            return (Criteria) this;
        }

        public Criteria andTotalPayGreaterThan(BigDecimal value) {
            addCriterion("total_pay >", value, "totalPay");
            return (Criteria) this;
        }

        public Criteria andTotalPayGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total_pay >=", value, "totalPay");
            return (Criteria) this;
        }

        public Criteria andTotalPayLessThan(BigDecimal value) {
            addCriterion("total_pay <", value, "totalPay");
            return (Criteria) this;
        }

        public Criteria andTotalPayLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total_pay <=", value, "totalPay");
            return (Criteria) this;
        }

        public Criteria andTotalPayIn(List<BigDecimal> values) {
            addCriterion("total_pay in", values, "totalPay");
            return (Criteria) this;
        }

        public Criteria andTotalPayNotIn(List<BigDecimal> values) {
            addCriterion("total_pay not in", values, "totalPay");
            return (Criteria) this;
        }

        public Criteria andTotalPayBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_pay between", value1, value2, "totalPay");
            return (Criteria) this;
        }

        public Criteria andTotalPayNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_pay not between", value1, value2, "totalPay");
            return (Criteria) this;
        }

        public Criteria andAccountPayIsNull() {
            addCriterion("account_pay is null");
            return (Criteria) this;
        }

        public Criteria andAccountPayIsNotNull() {
            addCriterion("account_pay is not null");
            return (Criteria) this;
        }

        public Criteria andAccountPayEqualTo(BigDecimal value) {
            addCriterion("account_pay =", value, "accountPay");
            return (Criteria) this;
        }

        public Criteria andAccountPayNotEqualTo(BigDecimal value) {
            addCriterion("account_pay <>", value, "accountPay");
            return (Criteria) this;
        }

        public Criteria andAccountPayGreaterThan(BigDecimal value) {
            addCriterion("account_pay >", value, "accountPay");
            return (Criteria) this;
        }

        public Criteria andAccountPayGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("account_pay >=", value, "accountPay");
            return (Criteria) this;
        }

        public Criteria andAccountPayLessThan(BigDecimal value) {
            addCriterion("account_pay <", value, "accountPay");
            return (Criteria) this;
        }

        public Criteria andAccountPayLessThanOrEqualTo(BigDecimal value) {
            addCriterion("account_pay <=", value, "accountPay");
            return (Criteria) this;
        }

        public Criteria andAccountPayIn(List<BigDecimal> values) {
            addCriterion("account_pay in", values, "accountPay");
            return (Criteria) this;
        }

        public Criteria andAccountPayNotIn(List<BigDecimal> values) {
            addCriterion("account_pay not in", values, "accountPay");
            return (Criteria) this;
        }

        public Criteria andAccountPayBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("account_pay between", value1, value2, "accountPay");
            return (Criteria) this;
        }

        public Criteria andAccountPayNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("account_pay not between", value1, value2, "accountPay");
            return (Criteria) this;
        }

        public Criteria andActualPayIsNull() {
            addCriterion("actual_pay is null");
            return (Criteria) this;
        }

        public Criteria andActualPayIsNotNull() {
            addCriterion("actual_pay is not null");
            return (Criteria) this;
        }

        public Criteria andActualPayEqualTo(BigDecimal value) {
            addCriterion("actual_pay =", value, "actualPay");
            return (Criteria) this;
        }

        public Criteria andActualPayNotEqualTo(BigDecimal value) {
            addCriterion("actual_pay <>", value, "actualPay");
            return (Criteria) this;
        }

        public Criteria andActualPayGreaterThan(BigDecimal value) {
            addCriterion("actual_pay >", value, "actualPay");
            return (Criteria) this;
        }

        public Criteria andActualPayGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("actual_pay >=", value, "actualPay");
            return (Criteria) this;
        }

        public Criteria andActualPayLessThan(BigDecimal value) {
            addCriterion("actual_pay <", value, "actualPay");
            return (Criteria) this;
        }

        public Criteria andActualPayLessThanOrEqualTo(BigDecimal value) {
            addCriterion("actual_pay <=", value, "actualPay");
            return (Criteria) this;
        }

        public Criteria andActualPayIn(List<BigDecimal> values) {
            addCriterion("actual_pay in", values, "actualPay");
            return (Criteria) this;
        }

        public Criteria andActualPayNotIn(List<BigDecimal> values) {
            addCriterion("actual_pay not in", values, "actualPay");
            return (Criteria) this;
        }

        public Criteria andActualPayBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("actual_pay between", value1, value2, "actualPay");
            return (Criteria) this;
        }

        public Criteria andActualPayNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("actual_pay not between", value1, value2, "actualPay");
            return (Criteria) this;
        }

        public Criteria andWashNumberIsNull() {
            addCriterion("wash_number is null");
            return (Criteria) this;
        }

        public Criteria andWashNumberIsNotNull() {
            addCriterion("wash_number is not null");
            return (Criteria) this;
        }

        public Criteria andWashNumberEqualTo(Integer value) {
            addCriterion("wash_number =", value, "washNumber");
            return (Criteria) this;
        }

        public Criteria andWashNumberNotEqualTo(Integer value) {
            addCriterion("wash_number <>", value, "washNumber");
            return (Criteria) this;
        }

        public Criteria andWashNumberGreaterThan(Integer value) {
            addCriterion("wash_number >", value, "washNumber");
            return (Criteria) this;
        }

        public Criteria andWashNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("wash_number >=", value, "washNumber");
            return (Criteria) this;
        }

        public Criteria andWashNumberLessThan(Integer value) {
            addCriterion("wash_number <", value, "washNumber");
            return (Criteria) this;
        }

        public Criteria andWashNumberLessThanOrEqualTo(Integer value) {
            addCriterion("wash_number <=", value, "washNumber");
            return (Criteria) this;
        }

        public Criteria andWashNumberIn(List<Integer> values) {
            addCriterion("wash_number in", values, "washNumber");
            return (Criteria) this;
        }

        public Criteria andWashNumberNotIn(List<Integer> values) {
            addCriterion("wash_number not in", values, "washNumber");
            return (Criteria) this;
        }

        public Criteria andWashNumberBetween(Integer value1, Integer value2) {
            addCriterion("wash_number between", value1, value2, "washNumber");
            return (Criteria) this;
        }

        public Criteria andWashNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("wash_number not between", value1, value2, "washNumber");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table car_wash_pay
     *
     * @mbggenerated do_not_delete_during_merge Tue Apr 24 17:59:19 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table car_wash_pay
     *
     * @mbggenerated Tue Apr 24 17:59:19 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
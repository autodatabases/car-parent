package com.emate.shop.business.model;

import java.util.ArrayList;
import java.util.List;

public class RegionsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    protected Integer limitStart;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    protected Integer limitEnd;

    public static final String ID_ASC = "id asc";

    public static final String ID_DESC = "id desc";

    public static final String PARENTID_ASC = "parentId asc";

    public static final String PARENTID_DESC = "parentId desc";

    public static final String REGIONNAME_ASC = "regionName asc";

    public static final String REGIONNAME_DESC = "regionName desc";

    public static final String PARENTPATH_ASC = "parentPath asc";

    public static final String PARENTPATH_DESC = "parentPath desc";

    public static final String FIRSTLETTER_ASC = "firstLetter asc";

    public static final String FIRSTLETTER_DESC = "firstLetter desc";

    public static final String REGIONTYPE_ASC = "regionType asc";

    public static final String REGIONTYPE_DESC = "regionType desc";

    public static final String AGENCYID_ASC = "agencyId asc";

    public static final String AGENCYID_DESC = "agencyId desc";

    public static final String SHIPPINGID_ASC = "shippingId asc";

    public static final String SHIPPINGID_DESC = "shippingId desc";

    public static final String VISIBLE_ASC = "visible asc";

    public static final String VISIBLE_DESC = "visible desc";

    public static final String ROWID_ASC = "rowId asc";

    public static final String ROWID_DESC = "rowId desc";

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public RegionsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public void setLimitStart(Integer limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public Integer getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public void setLimitEnd(Integer limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public Integer getLimitEnd() {
        return limitEnd;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andParentidIsNull() {
            addCriterion("parentId is null");
            return (Criteria) this;
        }

        public Criteria andParentidIsNotNull() {
            addCriterion("parentId is not null");
            return (Criteria) this;
        }

        public Criteria andParentidEqualTo(Integer value) {
            addCriterion("parentId =", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotEqualTo(Integer value) {
            addCriterion("parentId <>", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidGreaterThan(Integer value) {
            addCriterion("parentId >", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidGreaterThanOrEqualTo(Integer value) {
            addCriterion("parentId >=", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidLessThan(Integer value) {
            addCriterion("parentId <", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidLessThanOrEqualTo(Integer value) {
            addCriterion("parentId <=", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidIn(List<Integer> values) {
            addCriterion("parentId in", values, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotIn(List<Integer> values) {
            addCriterion("parentId not in", values, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidBetween(Integer value1, Integer value2) {
            addCriterion("parentId between", value1, value2, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotBetween(Integer value1, Integer value2) {
            addCriterion("parentId not between", value1, value2, "parentid");
            return (Criteria) this;
        }

        public Criteria andRegionnameIsNull() {
            addCriterion("regionName is null");
            return (Criteria) this;
        }

        public Criteria andRegionnameIsNotNull() {
            addCriterion("regionName is not null");
            return (Criteria) this;
        }

        public Criteria andRegionnameEqualTo(String value) {
            addCriterion("regionName =", value, "regionname");
            return (Criteria) this;
        }

        public Criteria andRegionnameNotEqualTo(String value) {
            addCriterion("regionName <>", value, "regionname");
            return (Criteria) this;
        }

        public Criteria andRegionnameGreaterThan(String value) {
            addCriterion("regionName >", value, "regionname");
            return (Criteria) this;
        }

        public Criteria andRegionnameGreaterThanOrEqualTo(String value) {
            addCriterion("regionName >=", value, "regionname");
            return (Criteria) this;
        }

        public Criteria andRegionnameLessThan(String value) {
            addCriterion("regionName <", value, "regionname");
            return (Criteria) this;
        }

        public Criteria andRegionnameLessThanOrEqualTo(String value) {
            addCriterion("regionName <=", value, "regionname");
            return (Criteria) this;
        }

        public Criteria andRegionnameLike(String value) {
            addCriterion("regionName like", value, "regionname");
            return (Criteria) this;
        }

        public Criteria andRegionnameNotLike(String value) {
            addCriterion("regionName not like", value, "regionname");
            return (Criteria) this;
        }

        public Criteria andRegionnameIn(List<String> values) {
            addCriterion("regionName in", values, "regionname");
            return (Criteria) this;
        }

        public Criteria andRegionnameNotIn(List<String> values) {
            addCriterion("regionName not in", values, "regionname");
            return (Criteria) this;
        }

        public Criteria andRegionnameBetween(String value1, String value2) {
            addCriterion("regionName between", value1, value2, "regionname");
            return (Criteria) this;
        }

        public Criteria andRegionnameNotBetween(String value1, String value2) {
            addCriterion("regionName not between", value1, value2, "regionname");
            return (Criteria) this;
        }

        public Criteria andParentpathIsNull() {
            addCriterion("parentPath is null");
            return (Criteria) this;
        }

        public Criteria andParentpathIsNotNull() {
            addCriterion("parentPath is not null");
            return (Criteria) this;
        }

        public Criteria andParentpathEqualTo(String value) {
            addCriterion("parentPath =", value, "parentpath");
            return (Criteria) this;
        }

        public Criteria andParentpathNotEqualTo(String value) {
            addCriterion("parentPath <>", value, "parentpath");
            return (Criteria) this;
        }

        public Criteria andParentpathGreaterThan(String value) {
            addCriterion("parentPath >", value, "parentpath");
            return (Criteria) this;
        }

        public Criteria andParentpathGreaterThanOrEqualTo(String value) {
            addCriterion("parentPath >=", value, "parentpath");
            return (Criteria) this;
        }

        public Criteria andParentpathLessThan(String value) {
            addCriterion("parentPath <", value, "parentpath");
            return (Criteria) this;
        }

        public Criteria andParentpathLessThanOrEqualTo(String value) {
            addCriterion("parentPath <=", value, "parentpath");
            return (Criteria) this;
        }

        public Criteria andParentpathLike(String value) {
            addCriterion("parentPath like", value, "parentpath");
            return (Criteria) this;
        }

        public Criteria andParentpathNotLike(String value) {
            addCriterion("parentPath not like", value, "parentpath");
            return (Criteria) this;
        }

        public Criteria andParentpathIn(List<String> values) {
            addCriterion("parentPath in", values, "parentpath");
            return (Criteria) this;
        }

        public Criteria andParentpathNotIn(List<String> values) {
            addCriterion("parentPath not in", values, "parentpath");
            return (Criteria) this;
        }

        public Criteria andParentpathBetween(String value1, String value2) {
            addCriterion("parentPath between", value1, value2, "parentpath");
            return (Criteria) this;
        }

        public Criteria andParentpathNotBetween(String value1, String value2) {
            addCriterion("parentPath not between", value1, value2, "parentpath");
            return (Criteria) this;
        }

        public Criteria andFirstletterIsNull() {
            addCriterion("firstLetter is null");
            return (Criteria) this;
        }

        public Criteria andFirstletterIsNotNull() {
            addCriterion("firstLetter is not null");
            return (Criteria) this;
        }

        public Criteria andFirstletterEqualTo(String value) {
            addCriterion("firstLetter =", value, "firstletter");
            return (Criteria) this;
        }

        public Criteria andFirstletterNotEqualTo(String value) {
            addCriterion("firstLetter <>", value, "firstletter");
            return (Criteria) this;
        }

        public Criteria andFirstletterGreaterThan(String value) {
            addCriterion("firstLetter >", value, "firstletter");
            return (Criteria) this;
        }

        public Criteria andFirstletterGreaterThanOrEqualTo(String value) {
            addCriterion("firstLetter >=", value, "firstletter");
            return (Criteria) this;
        }

        public Criteria andFirstletterLessThan(String value) {
            addCriterion("firstLetter <", value, "firstletter");
            return (Criteria) this;
        }

        public Criteria andFirstletterLessThanOrEqualTo(String value) {
            addCriterion("firstLetter <=", value, "firstletter");
            return (Criteria) this;
        }

        public Criteria andFirstletterLike(String value) {
            addCriterion("firstLetter like", value, "firstletter");
            return (Criteria) this;
        }

        public Criteria andFirstletterNotLike(String value) {
            addCriterion("firstLetter not like", value, "firstletter");
            return (Criteria) this;
        }

        public Criteria andFirstletterIn(List<String> values) {
            addCriterion("firstLetter in", values, "firstletter");
            return (Criteria) this;
        }

        public Criteria andFirstletterNotIn(List<String> values) {
            addCriterion("firstLetter not in", values, "firstletter");
            return (Criteria) this;
        }

        public Criteria andFirstletterBetween(String value1, String value2) {
            addCriterion("firstLetter between", value1, value2, "firstletter");
            return (Criteria) this;
        }

        public Criteria andFirstletterNotBetween(String value1, String value2) {
            addCriterion("firstLetter not between", value1, value2, "firstletter");
            return (Criteria) this;
        }

        public Criteria andRegiontypeIsNull() {
            addCriterion("regionType is null");
            return (Criteria) this;
        }

        public Criteria andRegiontypeIsNotNull() {
            addCriterion("regionType is not null");
            return (Criteria) this;
        }

        public Criteria andRegiontypeEqualTo(Byte value) {
            addCriterion("regionType =", value, "regiontype");
            return (Criteria) this;
        }

        public Criteria andRegiontypeNotEqualTo(Byte value) {
            addCriterion("regionType <>", value, "regiontype");
            return (Criteria) this;
        }

        public Criteria andRegiontypeGreaterThan(Byte value) {
            addCriterion("regionType >", value, "regiontype");
            return (Criteria) this;
        }

        public Criteria andRegiontypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("regionType >=", value, "regiontype");
            return (Criteria) this;
        }

        public Criteria andRegiontypeLessThan(Byte value) {
            addCriterion("regionType <", value, "regiontype");
            return (Criteria) this;
        }

        public Criteria andRegiontypeLessThanOrEqualTo(Byte value) {
            addCriterion("regionType <=", value, "regiontype");
            return (Criteria) this;
        }

        public Criteria andRegiontypeIn(List<Byte> values) {
            addCriterion("regionType in", values, "regiontype");
            return (Criteria) this;
        }

        public Criteria andRegiontypeNotIn(List<Byte> values) {
            addCriterion("regionType not in", values, "regiontype");
            return (Criteria) this;
        }

        public Criteria andRegiontypeBetween(Byte value1, Byte value2) {
            addCriterion("regionType between", value1, value2, "regiontype");
            return (Criteria) this;
        }

        public Criteria andRegiontypeNotBetween(Byte value1, Byte value2) {
            addCriterion("regionType not between", value1, value2, "regiontype");
            return (Criteria) this;
        }

        public Criteria andAgencyidIsNull() {
            addCriterion("agencyId is null");
            return (Criteria) this;
        }

        public Criteria andAgencyidIsNotNull() {
            addCriterion("agencyId is not null");
            return (Criteria) this;
        }

        public Criteria andAgencyidEqualTo(Short value) {
            addCriterion("agencyId =", value, "agencyid");
            return (Criteria) this;
        }

        public Criteria andAgencyidNotEqualTo(Short value) {
            addCriterion("agencyId <>", value, "agencyid");
            return (Criteria) this;
        }

        public Criteria andAgencyidGreaterThan(Short value) {
            addCriterion("agencyId >", value, "agencyid");
            return (Criteria) this;
        }

        public Criteria andAgencyidGreaterThanOrEqualTo(Short value) {
            addCriterion("agencyId >=", value, "agencyid");
            return (Criteria) this;
        }

        public Criteria andAgencyidLessThan(Short value) {
            addCriterion("agencyId <", value, "agencyid");
            return (Criteria) this;
        }

        public Criteria andAgencyidLessThanOrEqualTo(Short value) {
            addCriterion("agencyId <=", value, "agencyid");
            return (Criteria) this;
        }

        public Criteria andAgencyidIn(List<Short> values) {
            addCriterion("agencyId in", values, "agencyid");
            return (Criteria) this;
        }

        public Criteria andAgencyidNotIn(List<Short> values) {
            addCriterion("agencyId not in", values, "agencyid");
            return (Criteria) this;
        }

        public Criteria andAgencyidBetween(Short value1, Short value2) {
            addCriterion("agencyId between", value1, value2, "agencyid");
            return (Criteria) this;
        }

        public Criteria andAgencyidNotBetween(Short value1, Short value2) {
            addCriterion("agencyId not between", value1, value2, "agencyid");
            return (Criteria) this;
        }

        public Criteria andShippingidIsNull() {
            addCriterion("shippingId is null");
            return (Criteria) this;
        }

        public Criteria andShippingidIsNotNull() {
            addCriterion("shippingId is not null");
            return (Criteria) this;
        }

        public Criteria andShippingidEqualTo(Integer value) {
            addCriterion("shippingId =", value, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidNotEqualTo(Integer value) {
            addCriterion("shippingId <>", value, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidGreaterThan(Integer value) {
            addCriterion("shippingId >", value, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidGreaterThanOrEqualTo(Integer value) {
            addCriterion("shippingId >=", value, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidLessThan(Integer value) {
            addCriterion("shippingId <", value, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidLessThanOrEqualTo(Integer value) {
            addCriterion("shippingId <=", value, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidIn(List<Integer> values) {
            addCriterion("shippingId in", values, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidNotIn(List<Integer> values) {
            addCriterion("shippingId not in", values, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidBetween(Integer value1, Integer value2) {
            addCriterion("shippingId between", value1, value2, "shippingid");
            return (Criteria) this;
        }

        public Criteria andShippingidNotBetween(Integer value1, Integer value2) {
            addCriterion("shippingId not between", value1, value2, "shippingid");
            return (Criteria) this;
        }

        public Criteria andVisibleIsNull() {
            addCriterion("visible is null");
            return (Criteria) this;
        }

        public Criteria andVisibleIsNotNull() {
            addCriterion("visible is not null");
            return (Criteria) this;
        }

        public Criteria andVisibleEqualTo(Integer value) {
            addCriterion("visible =", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleNotEqualTo(Integer value) {
            addCriterion("visible <>", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleGreaterThan(Integer value) {
            addCriterion("visible >", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleGreaterThanOrEqualTo(Integer value) {
            addCriterion("visible >=", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleLessThan(Integer value) {
            addCriterion("visible <", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleLessThanOrEqualTo(Integer value) {
            addCriterion("visible <=", value, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleIn(List<Integer> values) {
            addCriterion("visible in", values, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleNotIn(List<Integer> values) {
            addCriterion("visible not in", values, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleBetween(Integer value1, Integer value2) {
            addCriterion("visible between", value1, value2, "visible");
            return (Criteria) this;
        }

        public Criteria andVisibleNotBetween(Integer value1, Integer value2) {
            addCriterion("visible not between", value1, value2, "visible");
            return (Criteria) this;
        }

        public Criteria andRowidIsNull() {
            addCriterion("rowId is null");
            return (Criteria) this;
        }

        public Criteria andRowidIsNotNull() {
            addCriterion("rowId is not null");
            return (Criteria) this;
        }

        public Criteria andRowidEqualTo(String value) {
            addCriterion("rowId =", value, "rowid");
            return (Criteria) this;
        }

        public Criteria andRowidNotEqualTo(String value) {
            addCriterion("rowId <>", value, "rowid");
            return (Criteria) this;
        }

        public Criteria andRowidGreaterThan(String value) {
            addCriterion("rowId >", value, "rowid");
            return (Criteria) this;
        }

        public Criteria andRowidGreaterThanOrEqualTo(String value) {
            addCriterion("rowId >=", value, "rowid");
            return (Criteria) this;
        }

        public Criteria andRowidLessThan(String value) {
            addCriterion("rowId <", value, "rowid");
            return (Criteria) this;
        }

        public Criteria andRowidLessThanOrEqualTo(String value) {
            addCriterion("rowId <=", value, "rowid");
            return (Criteria) this;
        }

        public Criteria andRowidLike(String value) {
            addCriterion("rowId like", value, "rowid");
            return (Criteria) this;
        }

        public Criteria andRowidNotLike(String value) {
            addCriterion("rowId not like", value, "rowid");
            return (Criteria) this;
        }

        public Criteria andRowidIn(List<String> values) {
            addCriterion("rowId in", values, "rowid");
            return (Criteria) this;
        }

        public Criteria andRowidNotIn(List<String> values) {
            addCriterion("rowId not in", values, "rowid");
            return (Criteria) this;
        }

        public Criteria andRowidBetween(String value1, String value2) {
            addCriterion("rowId between", value1, value2, "rowid");
            return (Criteria) this;
        }

        public Criteria andRowidNotBetween(String value1, String value2) {
            addCriterion("rowId not between", value1, value2, "rowid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table regions
     *
     * @mbggenerated do_not_delete_during_merge Wed Dec 21 16:13:30 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table regions
     *
     * @mbggenerated Wed Dec 21 16:13:30 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}